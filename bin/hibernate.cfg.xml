<!-- <!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd"> -->

<hibernate-configuration>

    <session-factory>

        <!-- JDBC Database connection settings -->
        <property name="connection.driver_class">com.mysql.cj.jdbc.Driver</property>
        <property name="connection.url">jdbc:mysql://localhost:3306/hb_student_tracker?useSSL=false&amp;serverTimezone=UTC</property>
        <property name="connection.username">hibernate</property>
        <property name="connection.password">hibernate</property>

        <!-- JDBC connection pool settings ... using built-in test pool -->
        <property name="connection.pool_size">2</property> 

        <!-- Select our SQL dialect -->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</property>

        <!-- Echo the SQL to stdout -->
        <property name="show_sql">true</property>
        <property name="hibernate.format_sql">true</property>

		<!-- Set the current session context -->
		<property name="current_session_context_class">thread</property>
 		
 		<property name="hbm2ddl.auto">create</property> <!-- EmployeeDemo, EmployeeDemo4, EmployeeDemo5 : create, Rest : update -->
 		<!-- <property name="hbm2ddl.auto">value</property>  // value can be : Create/Update/validate/create-drop -->
	 	
		<!-- For any property of hbm2ddl.auto, use MySQL5Dialect and if in POJO the GenerationType is AUTO, use connection.pool_size = 2 as it will generate a hibernate_sequence table for next value insertion else use IDENTITY instead of AUTO -->
		
    </session-factory>

</hibernate-configuration>